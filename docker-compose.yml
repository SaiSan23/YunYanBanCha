version: '3.8'

services:
  web:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./web:/usr/share/nginx/html
    depends_on:
      - api-gateway
    networks:
      - app-network

  api-gateway:
    build: ./services/api-gateway
    ports:
      - "5001:5000"
    depends_on:
      - other-service
      - auth-service
      - survey-service
      - mission-service   # ✅ 加這行可確保網關等任務啟動
    networks:
      - app-network

  other-service:
    build: ./services/other-service
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=testdb
    networks:
      - app-network

  auth-service:
    build: ./services/auth-service
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=testdb
      - JWT_SECRET_KEY=your_secret_key_change_this_in_production
    networks:
      - app-network

  survey-service:
    build: ./services/survey-service
    ports:
      - "5002:5002"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=testdb
    networks:
      - app-network

  mission-service:
    build: ./services/mission-service
    ports:
      - "5003:5003"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=testdb
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: testdb
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    command:
      --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - db_data:/var/lib/mysql
      - ./sql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  seeder:
    build: ./seed
    depends_on:
      - db
    restart: "no"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
